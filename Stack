#include <stdio.h>
#include <stdlib.h>
#define size 100
#define A -1

struct stack{
	int arr[size];
	int sp;
};

void push(struct stack *,int);
int pop(struct stack *);
int peek(struct stack *);
void display(struct stack *);

struct stack S;


void main(){
	S.sp=A;
	int ch,val;
	
	do{
	printf("\n*****MENU*****\n");
	printf("1.PUSH\n");
	printf("2.POP\n");
	printf("3.PEEK\n");
	printf("4.DISPLAY\n");
	printf("5.EXIT\n");
	printf("Enter choice : ");
	scanf("%d",&ch);
	switch(ch){
		
		case 1: printf("Enter value to be pushed :");
		        scanf("%d",&val);
				push(&S,val); 
				break;
		case 2: val=pop(&S);
		        if(val!=-1){
		          printf("\nvalue popped is %d",val);
		        }
				else{
				  printf("\nSTACK UNDERFLOW");
				} 
				break;
		case 3: val=peek(&S);
		        if(val==-1){
		        	printf("\nSTACK IS EMPTY");
				}		
				else{
					printf("\nvalue at top is %d ",val);
				}
				break;
		case 4: display(&S);
		        break;		
	
	    }
    }while(ch!=4);
}

void push(struct stack *S1,int val){
	if(S1->sp==-1 || S1->sp<size-1){
		(S1->sp)++;
		S1->arr[S1->sp]=val;
	}
	else if(S1->sp==size-1){
		printf("\nSTACK OVERFLOW");
	}
}

int pop(struct stack *S2){
	int c;
	if(S2->sp==-1)
		return -1;
	else{
		c=S2->arr[S2->sp];
		(S2->sp)--;
		return c;
	}	
}
int peek(struct stack *S3){
	if(S3->sp==-1){
		return -1;
	}
	else{
		return S3->arr[S3->sp];
	}
}
void display(struct stack *S4){
	int i=0;
	if(S4->sp==-1){
		printf("\nStack is empty");
	}
	else{
		S4->arr[S4->sp+1]=-1;
		while(S4->arr[i]!=-1){
			printf("%d -- ",S4->arr[i]);
			i++;   
		}
		
	}
}
